@model IEnumerable<TwitterSentimentsCore.Models.Request>

<h2>Request History</h2>

<p>
    <a asp-controller="Requests" asp-action="CreateUserRequest">Create New</a>

    @{ 
        if(ViewData.Values.Contains("asc") || ViewData.Values.Contains("desc"))
        {
            <span> | </span><a asp-controller="Requests" asp-action="Index">Reset Sort</a>
        }
    }

</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TwitterHandle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Count)
        </th>
        <th>
            @{
                if (ViewData.Values.Contains("asc"))
                {
                    @Html.ActionLink("Score", "Index", new { SortOrder = "desc" });
                }
                else
                {
                    @Html.ActionLink("Score", "Index", new { SortOrder = "asc" });
                }
            }
        </th>
        <th>Scale</th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @item.TwitterHandle
            </td>
            <td>
                @item.Count
            </td>
            <td class="data" id="data" value="@item.Result">
                @{ var percent = Math.Round(item.Result*100, 2); }
                @percent<span>%</span>
            </td>
            <td id="scale"></td>
            <td>
                @{
                    if (item.TwitterHandle.StartsWith("@"))
                    {
                        <a asp-controller="Requests" asp-action="Details" asp-route-id="@item.Id">Details</a><span> | </span>
                    }
                }
                <a asp-controller="Requests" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }
</table>

<script type="text/javascript">
    var data = document.querySelectorAll("#data");
    var scales = document.querySelectorAll("#scale");

    for (let i = 0; i < data.length; i++) {
        var value = data[i].attributes[2].nodeValue;

        var p = document.createElement("p");

        // Convert value to Red -> Yellow -> Green gradient
        // Intervals of 12.5%
        if(value > 0 && value < 0.4) {
            p.style.backgroundColor = "#FF2828";
        } else if (value >= 0.4 && value < 0.5) {
            p.style.backgroundColor = "#FF6030";
        } else if (value >= 0.5 && value < 0.55) {
            p.style.backgroundColor = "#FF9E28";
        } else if (value >= 0.55 && value < 0.6) {
            p.style.backgroundColor = "#FFBE28";
        } else if (value >= 0.6 && value < 0.65) {
            p.style.backgroundColor = "#FFDB28";
        } else if (value >= 0.65 && value < 0.725) {
            p.style.backgroundColor = "#FFFF28";
        } else if (value >= 0.725 && value < 0.80) {
            p.style.backgroundColor = "#BBFF28";
        } else if (value >= 0.8 && value < 1.0) {
            p.style.backgroundColor = "#42FF42";
        }

        scales[i].appendChild(p);
    }
</script>